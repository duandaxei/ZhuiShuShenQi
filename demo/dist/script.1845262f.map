{"version":3,"sources":["script/index.js"],"names":["console","log","PROX_GATE","SearchHead","template","data","show_search_input","methods","swich_icon_input","$nextTick","document","querySelector","focus","redirect_to_search","e","key_word","redirect_url","target","value","$router","push","BackHead","props","go_back","window","history","back","FuncSwich","beforeMount","active_item_id","active","setAttribute","MyBook","components","Book_data","Object","keys","JSON","parse","localStorage","mybooks","forEach","id","fetch","method","body","stringify","then","res","json","Finding","Sort","Sort_data","Ranking","Ranking_data","Search","Search_data","$route","query","BookList","gender","major","Major_data","major_start","ranking_id","msg","action","get_major_sort","_id","get_ranking","load_next_page","scrollTop","Book","book_id","book_source_ajax","book_source_id","chapters","now_index","chapter_link","chapter_title","now_chapter_content","is_vip","chapter_status","show_chapter_list","show_control_bar","isFullscreen","is_collecting","watch","load_chapter","put_to_mybook","book_info","get_chapters","get_book_source","ensure_book_source","source_id","getAttribute","ok","chapter","hasOwnProperty","cpContent","replace","message","alert","show_chapter_list_func","set_index","index","add_index","parseFloat","full_screen","fullScreen","mozFullScreen","webkitIsFullScreen","el","style","top","bottom","zIndex","fullExit","element","documentElement","ActiveXObject","WsShell","SendKeys","webkitRequestFullScreen","webkitCancelFullScreen","requestFullScreen","exitFullscreen","msRequestFullscreen","msExitFullscreen","mozRequestFullScreen","mozCancelFullScreen","save","save_book_to_localstorage","routes","path","component","router","VueRouter","app","Vue"],"mappings":"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","file":"script.1845262f.map","sourceRoot":"..","sourcesContent":["console.log('开始执行 index.js');\r\n// 代理网关\r\nPROX_GATE = 'https://api.imhcg.cn/api/v1/proxy'\r\n\r\n/////////////////////////////////////\r\n//   组件\r\n// 附带搜索的头部\r\nconst SearchHead = {\r\n    template: '#template-search-header',\r\n    data: function () {\r\n        return {\r\n            show_search_input: false,\r\n        }\r\n    },\r\n    methods: {\r\n        swich_icon_input: function () {\r\n            this.show_search_input = !this.show_search_input;\r\n            if (this.show_search_input) {\r\n                this.$nextTick(\r\n                    function () {\r\n                        document.querySelector('#search-header-input').focus();\r\n                    }\r\n                )\r\n            }\r\n        },\r\n        redirect_to_search: function (e) {\r\n            let key_word = e.target.value;\r\n            let redirect_url = '/search/?key_word=' + key_word;\r\n            this.$router.push(redirect_url);\r\n            console.log('重定向到 ' + redirect_url)\r\n        }\r\n    }\r\n}\r\n\r\n// 附带返回的头部\r\nconst BackHead = {\r\n    props: ['msg'],\r\n    template: '#template-back-header',\r\n    methods: {\r\n        go_back: function () {\r\n            window.history.back();\r\n        }\r\n    }\r\n}\r\n\r\n// 功能页切换器\r\nconst FuncSwich = {\r\n    props: ['active'],\r\n    template: '#template-func-swich',\r\n    beforeMount: function () {\r\n        this.$nextTick(\r\n            function () {\r\n                let active_item_id = 'func-swich-' + this.active;\r\n                console.log('活跃标签切换到 ' + active_item_id);\r\n                document.querySelector('#' + active_item_id).setAttribute('class', 'func-swich-item-active');\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// 书架\r\nconst MyBook = {\r\n    components: {\r\n        'search-head': SearchHead,\r\n        'func-swich': FuncSwich\r\n    },\r\n    template: `#template-mybook`,\r\n    data: function () {\r\n        return {\r\n            Book_data: [],\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        let id_list = Object.keys(JSON.parse(localStorage.mybooks));\r\n        id_list.forEach(id => {\r\n            fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'url': 'http://api.zhuishushenqi.com/book/'+id\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res);\r\n                this.Book_data.push(res);\r\n            })\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n// 发现\r\nconst Finding = {\r\n    components: {\r\n        'search-head': SearchHead,\r\n        'func-swich': FuncSwich\r\n    },\r\n    template: '#template-finding'\r\n}\r\n\r\n// 分类\r\nconst Sort = {\r\n    template: '#template-sort',\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    data: function () {\r\n        return {\r\n            Sort_data: '',\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'url': 'http://api.zhuishushenqi.com/cats/lv2/statistics'\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.Sort_data = res\r\n            })\r\n    }\r\n}\r\n// 排行\r\nconst Ranking = {\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    template: '#template-ranking',\r\n    data: function () {\r\n        return {\r\n            Ranking_data: '',\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'url': 'http://api.zhuishushenqi.com/ranking/gender'\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.Ranking_data = res\r\n            })\r\n    }\r\n}\r\n// 搜索\r\nconst Search = {\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    template: '#template-search',\r\n    data: function () {\r\n        return {\r\n            Search_data: '',\r\n            key_word: '',\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        this.key_word = this.$route.query.key_word;\r\n        console.log('开始搜索关键词：' + this.key_word);\r\n        fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    'url': 'http://api.zhuishushenqi.com/book/fuzzy-search?query=' + this.key_word\r\n                }),\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.Search_data = res\r\n            })\r\n    }\r\n}\r\n// 加载书籍列表，包括分类和排行\r\nconst BookList = {\r\n    template: '#template-book-list',\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    data: function () {\r\n        return {\r\n            gender: '',\r\n            major: '',\r\n            Major_data: '',\r\n            major_start: 0,\r\n            Ranking_data: '',\r\n            ranking_id: '',\r\n            msg: '',\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        let action = this.$route.query.action;\r\n        // 加载分类书单\r\n        if (action === 'sort-major') {\r\n\r\n            this.gender = this.$route.query.gender;\r\n            this.major = this.$route.query.major;\r\n            this.get_major_sort();\r\n            this.msg = this.$route.query.msg;\r\n            console.log('加载分类' + this.major)\r\n        }\r\n        // 加载排行书单\r\n        else if (action === 'ranking') {\r\n            console.log('加载排行榜')\r\n            this.ranking_id = this.$route.query._id;\r\n            this.get_ranking();\r\n            this.msg = this.$route.query.msg;\r\n        }\r\n    },\r\n    methods: {\r\n        get_major_sort: function () {\r\n            fetch(PROX_GATE, {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        'url': 'https://api.zhuishushenqi.com/book/by-categories?gender=' + this.gender + '&type=hot&major=' + this.major + '&minor=&start=' + this.major_start + '&limit=10'\r\n                    }),\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.Major_data = res\r\n                })\r\n        },\r\n        get_ranking: function () {\r\n            fetch(PROX_GATE, {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        'url': 'http://api.zhuishushenqi.com/ranking/' + this.ranking_id\r\n                    }),\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.Ranking_data = res\r\n                })\r\n        },\r\n        load_next_page: function () {\r\n            console.log('加载更多');\r\n            this.major_start += 1;\r\n            this.get_major_sort();\r\n            // 数据刷新后返回顶部\r\n            document.body.scrollTop = 0;\r\n        }\r\n    }\r\n}\r\n// 书籍页\r\nconst Book = {\r\n    template: '#template-book',\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    data: function () {\r\n        return {\r\n            book_id: '',\r\n            book_source_ajax: '',\r\n            book_source_id: '',\r\n            chapters: '',\r\n            now_index: '',\r\n            msg: '',\r\n            chapter_link: '',\r\n            chapter_title: '',\r\n            now_chapter_content: '',\r\n            is_vip: '',\r\n            chapter_status: '',\r\n            show_chapter_list: false,\r\n            show_control_bar: true,\r\n            isFullscreen: false,\r\n            is_collecting: false,\r\n        }\r\n    },\r\n    watch: {\r\n        chapters: function () {\r\n            console.log('检测到章节数据变动');\r\n            // 尝试读取index\r\n            if (!this.now_index) {\r\n                this.now_index = 0;\r\n                this.load_chapter();\r\n            } else {\r\n                this.load_chapter();\r\n            }\r\n        },\r\n        now_index: function () {\r\n            console.log('检测到索引变动')\r\n            // 更新收藏状态\r\n            this.is_collecting = !!((JSON.parse(localStorage.mybooks))[this.book_id]);\r\n            // 如果已经缓存了章节，直接跳转，否则不执行\r\n            if (this.chapters) {\r\n                this.load_chapter();\r\n                if (this.is_collecting) {\r\n                    this.put_to_mybook();\r\n                }\r\n            }\r\n        },\r\n    },\r\n    beforeMount: function () {\r\n        this.book_id = this.$route.query.book_id;\r\n        console.log('初始化阅读组件，书籍 id 为 ', this.book_id);\r\n        // 检查是否有收藏记录\r\n        if (!!((JSON.parse(localStorage.mybooks))[this.book_id])) {\r\n            console.log('读取记录');\r\n            let book_info = JSON.parse((JSON.parse(localStorage.mybooks))[this.book_id])\r\n            console.log(book_info);\r\n            this.book_id = book_info.book_id;\r\n            this.book_source_id = book_info.book_source_id;\r\n            this.now_index = book_info.now_index;\r\n        }\r\n        // 判断书源，返回选择器或者直接加载章节\r\n        if (!this.book_source_id) {\r\n            this.get_book_source();\r\n            this.msg = '书源选择'\r\n        } else {\r\n            this.get_chapters();\r\n        }\r\n    },\r\n    methods: {\r\n        get_book_source: function () {\r\n            console.log('正在获取书源');\r\n            fetch(PROX_GATE, {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        'url': 'http://api.zhuishushenqi.com/atoc?view=summary&book=' + this.book_id\r\n                    }),\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.book_source_ajax = res\r\n                })\r\n        },\r\n        ensure_book_source: function (e) {\r\n            console.log('书源已确认，即将加载章节数据');\r\n            let source_id = e.target.getAttribute('source_id');\r\n            if (source_id) {\r\n                this.book_source_id = source_id;\r\n                this.get_chapters();\r\n            }\r\n        },\r\n        get_chapters: function () {\r\n            console.log('正在获取书籍所有章节');\r\n            fetch(PROX_GATE, {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        'url': 'https://api.zhuishushenqi.com/atoc/' + this.book_source_id + '?view=chapters'\r\n                    }),\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.chapters = res\r\n                })\r\n        },\r\n        load_chapter: function () {\r\n            console.log('正在根据索引加载当前章节');\r\n            this.chapter_link = this.chapters['chapters'][this.now_index]['link'];\r\n            this.chapter_title = this.chapters['chapters'][this.now_index]['title'];\r\n            this.msg = this.chapter_title;\r\n            fetch(PROX_GATE, {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        'url': 'https://chapterup.zhuishushenqi.com/chapter/' + this.chapter_link\r\n                    }),\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.now_chapter_content = res;\r\n                    if (res.ok) {\r\n                        this.chapter_status = true;\r\n                        this.is_vip = this.now_chapter_content.chapter.hasOwnProperty('cpContent');\r\n                        if (this.is_vip) {\r\n                            this.now_chapter_content.chapter.cpContent = (this.now_chapter_content.chapter.cpContent).replace(/\\n\\n/g, '\\n').replace(/\\n/g, '<br/><br/>').replace(/\\s/g, '');\r\n                        } else {\r\n                            this.now_chapter_content.chapter.body = (this.now_chapter_content.chapter.body).replace(/\\n\\n/g, '\\n').replace(/\\n/g, '<br/><br/>').replace(/\\s/g, '');\r\n                        }\r\n                        // 初始化滚动条\r\n                        if (document.querySelector('#book-read-area')) {\r\n                            document.querySelector('#book-read-area').scrollTop = 0;\r\n                        }\r\n\r\n                    } else {\r\n                        this.chapter_status = false;\r\n                        console.log('读取章节内容出错，具体原因为：' + this.now_chapter_content.message);\r\n                        alert('当前源好像坏了，\\n建议换源再试。');\r\n                    }\r\n                })\r\n        },\r\n        show_chapter_list_func: function () {\r\n            console.log('切换目录/正文');\r\n            this.show_chapter_list = !this.show_chapter_list;\r\n            if (this.show_chapter_list) {\r\n                document.querySelector('#book-area').scrollTop = 0;\r\n            }\r\n        },\r\n        set_index: function (e) {\r\n            console.log('检测到目录操作，正在设置索引');\r\n            let index = e.target.getAttribute('chapter_index');\r\n            if (index) {\r\n                this.now_index = index;\r\n                this.show_chapter_list = !this.show_chapter_list;\r\n            }\r\n        },\r\n        add_index: function () {\r\n            // 有些时候会被当做字符串\r\n            this.now_index = parseFloat(this.now_index) + 1;\r\n        },\r\n        full_screen: function () {\r\n            console.log('全屏操作');\r\n            let isFullscreen = document.fullScreen || document.mozFullScreen || document.webkitIsFullScreen;\r\n            var el = document.querySelector('#app');\r\n            if (!isFullscreen) { //进入全屏,多重短路表达式\r\n                this.isFullscreen = true;\r\n                el.style.top = '0px';\r\n                el.style.bottom = '0px';\r\n                el.style.zIndex = '2';\r\n                fullScreen();\r\n            } else { //退出全屏,三目运算符\r\n                this.isFullscreen = false;\r\n                el.style.top = '50px';\r\n                el.style.bottom = '50px';\r\n                el.style.zIndex = '1';\r\n                fullExit();\r\n            }\r\n\r\n            //全屏  \r\n            function fullScreen() {\r\n                var element = document.documentElement; //若要全屏页面中div，var element= document.getElementById(\"divID\");  \r\n                //IE 10及以下ActiveXObject  \r\n                if (window.ActiveXObject) {\r\n                    var WsShell = new ActiveXObject('WScript.Shell')\r\n                    WsShell.SendKeys('{F11}');\r\n                }\r\n                // Webkit (works in Safari5.1 and Chrome 15)  \r\n                else if (element.webkitRequestFullScreen) {\r\n                    element.webkitRequestFullScreen();\r\n                }\r\n                //HTML W3C 提议  \r\n                else if (element.requestFullScreen) {\r\n                    element.requestFullScreen();\r\n                }\r\n                //IE11  \r\n                else if (element.msRequestFullscreen) {\r\n                    element.msRequestFullscreen();\r\n                }\r\n\r\n                // Firefox (works in nightly)  \r\n                else if (element.mozRequestFullScreen) {\r\n                    element.mozRequestFullScreen();\r\n                }\r\n            }\r\n\r\n            //退出全屏  \r\n            function fullExit() {\r\n                var element = document.documentElement; //若要全屏页面中div，var element= document.getElementById(\"divID\");   \r\n                //IE ActiveXObject  \r\n                if (window.ActiveXObject) {\r\n                    var WsShell = new ActiveXObject('WScript.Shell')\r\n                    WsShell.SendKeys('{F11}');\r\n                }\r\n                // Webkit (works in Safari5.1 and Chrome 15)  \r\n                else if (element.webkitRequestFullScreen) {\r\n                    document.webkitCancelFullScreen();\r\n                }\r\n                //HTML5 W3C 提议  \r\n                else if (element.requestFullScreen) {\r\n                    document.exitFullscreen();\r\n                }\r\n                //IE 11  \r\n                else if (element.msRequestFullscreen) {\r\n                    document.msExitFullscreen();\r\n                }\r\n\r\n                // Firefox (works in nightly)  \r\n                else if (element.mozRequestFullScreen) {\r\n                    document.mozCancelFullScreen();\r\n                }\r\n            }\r\n        },\r\n        put_to_mybook: function () {\r\n            // 判断收藏状态，若已收藏，执行取消收藏操作，反之则反之\r\n            if (this.is_collecting) {\r\n                console.log('取消收藏');\r\n                this.is_collecting = false;\r\n                let mybooks = JSON.parse(localStorage.mybooks);\r\n                delete mybooks[this.book_id];\r\n                localStorage.mybooks = JSON.stringify(mybooks);\r\n            } else {\r\n                // 开始收集信息\r\n                let book_info = {\r\n                    book_id: this.book_id,\r\n                    book_source_id: this.book_source_id,\r\n                    now_index: this.now_index,\r\n                }\r\n                save_book_to_localstorage(book_info)\r\n                // \r\n                function save_book_to_localstorage(book_info) {\r\n                    var mybooks = localStorage.mybooks;\r\n                    if (mybooks) {\r\n                        mybooks = JSON.parse(localStorage.mybooks);\r\n                        save(book_info);\r\n                        console.log('更新收藏信息成功，书籍 id 为 ' + book_info.book_id);\r\n                    } else {\r\n                        mybooks = {};\r\n                        save(book_info);\r\n                        console.log('收藏成功，书籍 id 为 ' + book_info.book_id);\r\n                    }\r\n\r\n                    function save(book_info) {\r\n                        mybooks[book_info.book_id] = JSON.stringify(book_info);\r\n                        localStorage.mybooks = JSON.stringify(mybooks);\r\n                    }\r\n                }\r\n                this.is_collecting = true;\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////\r\n//   路由\r\n// 生成路径\r\nconst routes = [{\r\n        path: '/',\r\n        component: MyBook\r\n    },\r\n    {\r\n        path: '/finding',\r\n        component: Finding\r\n    },\r\n    {\r\n        path: '/sort',\r\n        component: Sort\r\n    },\r\n    {\r\n        path: '/ranking',\r\n        component: Ranking\r\n    },\r\n    {\r\n        path: '/search',\r\n        component: Search\r\n    },\r\n    {\r\n        path: '/book-list',\r\n        component: BookList\r\n    },\r\n    {\r\n        path: '/book',\r\n        component: Book\r\n    },\r\n]\r\n\r\n// 通过路径生成路由\r\nconst router = new VueRouter({\r\n    routes: routes\r\n})\r\n\r\n\r\n/////////////////////////////////////\r\n//   实例\r\n//   生成实例\r\nvar app = new Vue({\r\n    el: '#app',\r\n    router: router,\r\n})"]}