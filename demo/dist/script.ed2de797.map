{"version":3,"sources":["script/index.js"],"names":["console","log","PROX_GATE","SearchHead","template","data","show_search_input","methods","swich_icon_input","$nextTick","document","querySelector","focus","redirect_to_search","e","key_word","redirect_url","target","value","$router","push","BackHead","props","go_back","window","history","back","FuncSwich","beforeMount","active_item_id","active","setAttribute","MyBook","components","Finding","Sort","Sort_data","fetch","method","body","JSON","stringify","then","res","json","Ranking","Ranking_data","Search","Search_data","$route","query","BookList","gender","major","Major_data","major_start","ranking_id","msg","action","get_major_sort","_id","get_ranking","load_next_page","scrollTop","documentElement","Book","book_id","book_source_ajax","book_source_id","chapters","now_index","chapter_link","chapter_title","now_chapter_content","is_vip","chapter_status","show_chapter_list","show_control_bar","watch","load_chapter","get_book_source","ensure_book_source","source_id","getAttribute","get_chapters","ok","chapter","hasOwnProperty","cpContent","replace","message","alert","show_chapter_list_func","set_index","index","add_index","routes","path","component","router","VueRouter","app","Vue","el"],"mappings":"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","file":"script.ed2de797.map","sourceRoot":"..","sourcesContent":["console.log('开始执行 index.js');\r\n// 代理网关\r\nPROX_GATE = 'https://api.imhcg.cn/api/v1/proxy'\r\n\r\n/////////////////////////////////////\r\n//   组件\r\n// 附带搜索的头部\r\nconst SearchHead = {\r\n    template: '#template-search-header',\r\n    data: function () {\r\n        return {\r\n            show_search_input: false,\r\n        }\r\n    },\r\n    methods: {\r\n        swich_icon_input: function () {\r\n            this.show_search_input = !this.show_search_input;\r\n            if (this.show_search_input) {\r\n                this.$nextTick(\r\n                    function () {\r\n                        document.querySelector('#search-header-input').focus();\r\n                    }\r\n                )\r\n            }\r\n        },\r\n        redirect_to_search: function (e) {\r\n            let key_word = e.target.value;\r\n            let redirect_url = '/search/?key_word=' + key_word;\r\n            this.$router.push(redirect_url);\r\n            console.log('重定向到 ' + redirect_url)\r\n        }\r\n    }\r\n}\r\n\r\n// 附带返回的头部\r\nconst BackHead = {\r\n    props: ['msg'],\r\n    template: '#template-back-header',\r\n    methods: {\r\n        go_back: function () {\r\n            window.history.back();\r\n        }\r\n    }\r\n}\r\n\r\n// 功能页切换器\r\nconst FuncSwich = {\r\n    props: ['active'],\r\n    template: '#template-func-swich',\r\n    beforeMount: function () {\r\n        this.$nextTick(\r\n            function () {\r\n                let active_item_id = 'func-swich-' + this.active;\r\n                console.log('活跃标签切换到 ' + active_item_id);\r\n                document.querySelector('#' + active_item_id).setAttribute('class', 'func-swich-item-active');\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n// 书架\r\nconst MyBook = {\r\n    components: {\r\n        'search-head': SearchHead,\r\n        'func-swich': FuncSwich\r\n    },\r\n    template: `#template-mybook`\r\n}\r\n\r\n// 发现\r\nconst Finding = {\r\n    components: {\r\n        'search-head': SearchHead,\r\n        'func-swich': FuncSwich\r\n    },\r\n    template: '#template-finding'\r\n}\r\n\r\n// 分类\r\nconst Sort = {\r\n    template: '#template-sort',\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    data: function () {\r\n        return {\r\n            Sort_data: '',\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        fetch(PROX_GATE, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ 'url': 'http://api.zhuishushenqi.com/cats/lv2/statistics' }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.Sort_data = res\r\n            })\r\n    }\r\n}\r\n// 排行\r\nconst Ranking = {\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    template: '#template-ranking',\r\n    data: function () {\r\n        return {\r\n            Ranking_data: '',\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        fetch(PROX_GATE, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ 'url': 'http://api.zhuishushenqi.com/ranking/gender' }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.Ranking_data = res\r\n            })\r\n    }\r\n}\r\n// 搜索\r\nconst Search = {\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    template: '#template-search',\r\n    data: function () {\r\n        return {\r\n            Search_data:'',\r\n            key_word:'',\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        this.key_word = this.$route.query.key_word;\r\n        console.log('开始搜索关键词：'+this.key_word);\r\n        fetch(PROX_GATE, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ 'url': 'http://api.zhuishushenqi.com/book/fuzzy-search?query='+this.key_word }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.Search_data = res\r\n            })\r\n    }\r\n}\r\n// 加载书籍列表，包括分类和排行\r\nconst BookList = {\r\n    template: '#template-book-list',\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    data: function () {\r\n        return {\r\n            gender: '',\r\n            major: '',\r\n            Major_data: '',\r\n            major_start: 0,\r\n            Ranking_data: '',\r\n            ranking_id: '',\r\n            msg: '',\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        let action = this.$route.query.action;\r\n        console.log(action)\r\n        // 加载分类书单\r\n        if (action === 'sort-major') {\r\n            this.gender = this.$route.query.gender;\r\n            this.major = this.$route.query.major;\r\n            this.get_major_sort();\r\n            this.msg = this.$route.query.msg;\r\n        }\r\n        // 加载排行书单\r\n        else if (action === 'ranking') {\r\n            console.log('render ranking')\r\n            this.ranking_id = this.$route.query._id;\r\n            this.get_ranking();\r\n            this.msg = this.$route.query.msg;\r\n        }\r\n    },\r\n    methods: {\r\n        get_major_sort: function () {\r\n            fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({ 'url': 'https://api.zhuishushenqi.com/book/by-categories?gender=' + this.gender + '&type=hot&major=' + this.major + '&minor=&start=' + this.major_start + '&limit=10' }),\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.Major_data = res\r\n                })\r\n        },\r\n        get_ranking: function () {\r\n            fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({ 'url': 'http://api.zhuishushenqi.com/ranking/' + this.ranking_id }),\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.Ranking_data = res\r\n                })\r\n        },\r\n        load_next_page: function () {\r\n            console.log('load more');\r\n            this.major_start += 1;\r\n            this.get_major_sort();\r\n            // 数据刷新后返回顶部\r\n            document.body.scrollTop = 0;\r\n            document.documentElement.scrollTop = 0;\r\n        }\r\n    }\r\n}\r\n// 书籍页\r\nconst Book = {\r\n    template: '#template-book',\r\n    components: {\r\n        'back-head': BackHead,\r\n    },\r\n    data: function () {\r\n        return {\r\n            book_id: '',\r\n            book_source_ajax: '',\r\n            book_source_id: '',\r\n            chapters: '',\r\n            now_index: '',\r\n            msg: '',\r\n            chapter_link: '',\r\n            chapter_title: '',\r\n            now_chapter_content: '',\r\n            is_vip: '',\r\n            chapter_status: '',\r\n            show_chapter_list: false,\r\n            show_control_bar: true,\r\n        }\r\n    },\r\n    watch: {\r\n        chapters: function () {\r\n            console.log('检测到章节数据变动');\r\n            // 尝试读取index\r\n            if (!this.now_index) {\r\n                this.now_index = 0;\r\n                this.load_chapter();\r\n            } else {\r\n                this.load_chapter();\r\n            }\r\n        },\r\n        now_index: function () {\r\n            console.log('检测到索引变动')\r\n            this.load_chapter();\r\n        }\r\n    },\r\n    beforeMount: function () {\r\n        this.book_id = this.$route.query.book_id;\r\n        console.log('初始化阅读组件，书籍，id 为 ', this.book_id);\r\n        // 通过书籍 ID 获取书籍源\r\n        if (!this.book_source_id) {\r\n            this.get_book_source();\r\n            this.msg = '书源选择'\r\n        }\r\n    },\r\n    methods: {\r\n        get_book_source: function () {\r\n            console.log('正在获取书源');\r\n            fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({ 'url': 'http://api.zhuishushenqi.com/atoc?view=summary&book=' + this.book_id }),\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.book_source_ajax = res\r\n                })\r\n        },\r\n        ensure_book_source: function (e) {\r\n            console.log('书源已确认，即将加载章节数据');\r\n            let source_id = e.target.getAttribute('source_id');\r\n            if (source_id) {\r\n                this.book_source_id = source_id;\r\n                this.get_chapters();\r\n            }\r\n        },\r\n        get_chapters: function () {\r\n            console.log('正在获取书籍所有章节');\r\n            fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({ 'url': 'https://api.zhuishushenqi.com/atoc/' + this.book_source_id + '?view=chapters' }),\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.chapters = res\r\n                })\r\n        },\r\n        load_chapter: function () {\r\n            console.log('正在根据索引加载当前章节');\r\n            this.chapter_link = this.chapters['chapters'][this.now_index]['link'];\r\n            this.chapter_title = this.chapters['chapters'][this.now_index]['title'];\r\n            this.msg = this.chapter_title;\r\n            fetch(PROX_GATE, {\r\n                method: \"POST\",\r\n                body: JSON.stringify({ 'url': 'https://chapterup.zhuishushenqi.com/chapter/' + this.chapter_link }),\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    this.now_chapter_content = res;\r\n                    if (res.ok) {\r\n                        this.chapter_status = true;\r\n                        this.is_vip = this.now_chapter_content.chapter.hasOwnProperty('cpContent');\r\n                        if (this.is_vip) {\r\n                            this.now_chapter_content.chapter.cpContent = (this.now_chapter_content.chapter.cpContent).replace(/\\n/g, '<br/>');\r\n                        }\r\n                        else {\r\n                            this.now_chapter_content.chapter.body = (this.now_chapter_content.chapter.body).replace(/\\n/g, '<br/>');\r\n                        }\r\n                        document.querySelector('#book-area').scrollTop = 0;\r\n                    } else {\r\n                        this.chapter_status = false;\r\n                        console.log('读取章节内容出错，具体原因为：'+this.now_chapter_content.message);\r\n                        alert('当前源好像坏了，\\n建议换源再试。');\r\n                    }\r\n                })\r\n        },\r\n        show_chapter_list_func: function () {\r\n            console.log('切换目录/正文');\r\n            this.show_chapter_list = !this.show_chapter_list;\r\n            if (this.show_chapter_list){\r\n                document.querySelector('#book-area').scrollTop = 0;\r\n            }\r\n        },\r\n        set_index: function (e) {\r\n            console.log('检测到目录操作，正在设置索引');\r\n            let index = e.target.getAttribute('chapter_index');\r\n            if (index) {\r\n                this.now_index = index;\r\n                this.show_chapter_list = !this.show_chapter_list;\r\n            }\r\n        },\r\n        add_index:function(){\r\n            this.now_index += 1;\r\n        }\r\n    }\r\n}\r\n\r\n/////////////////////////////////////\r\n//   路由\r\n// 生成路径\r\nconst routes = [\r\n    { path: '/', component: MyBook },\r\n    { path: '/finding', component: Finding },\r\n    { path: '/sort', component: Sort },\r\n    { path: '/ranking', component: Ranking },\r\n    { path: '/search', component: Search },\r\n    { path: '/book-list', component: BookList },\r\n    { path: '/book', component: Book },\r\n]\r\n\r\n// 通过路径生成路由\r\nconst router = new VueRouter({\r\n    routes: routes\r\n})\r\n\r\n\r\n/////////////////////////////////////\r\n//   实例\r\nvar app = new Vue({\r\n    el: '#app',\r\n    router: router,\r\n})"]}